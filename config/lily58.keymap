/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>

&lt { quick-tap-ms = <250>; };

/ {
    behaviors {
        bhm: balanced_homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;

            require-prior-idle-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "Base";
            bindings = <
&kp GRAVE   &kp N1  &kp N2       &kp N3        &kp N4        &kp N5                                &kp N6     &kp N7        &kp N8        &kp N9       &kp N0    &lt 3 MINUS
&kp TAB     &kp Q   &kp W        &kp E         &kp R         &kp T                                 &kp Y      &kp U         &kp I         &kp O        &kp P     &kp BSLH
&kp ESCAPE  &kp A   &bhm LALT S  &bhm LCTRL D  &bhm LSHFT F  &kp G                                 &kp H      &bhm RSHFT J  &bhm RCTRL K  &bhm RALT L  &kp SEMI  &kp SQT
&kp LSHFT   &kp Z   &kp X        &kp C         &kp V         &kp B      &kp LBKT      &kp RBKT     &kp N      &kp M         &kp COMMA     &kp DOT      &kp FSLH  &mt RSHFT EQUAL
                                 &kp LGUI      &kp LALT      &lt 2 DEL  &lt 1 BSPC    &lt 1 SPACE  &lt 2 RET  &kp RALT      &kp RGUI
            >;
        };

        lower_layer {
            display-name = "Lower";
            bindings = <
&trans    &trans            &trans           &trans            &trans             &trans                       &trans           &trans         &trans         &trans        &trans        &trans
&kp EXCL  &kp LEFT_BRACKET  &kp LPAR         &kp RPAR          &kp RIGHT_BRACKET  &kp QMARK                    &kp KP_ASTERISK  &kp N7         &kp N8         &kp N9        &kp KP_PLUS   &kp BSPC
&kp HASH  &kp CARET         &bhm LALT EQUAL  &bhm LCTRL UNDER  &bhm LSHFT DOLLAR  &kp STAR                     &kp KP_DIVIDE    &bhm RSHFT N4  &bhm RCTRL N5  &bhm RALT N6  &kp KP_MINUS  &kp TAB
&kp AT    &kp LT            &kp PRCNT        &kp AMPS          &kp GT             &kp SLASH  &trans    &trans  &kp KP_EQUAL     &kp N1         &kp N2         &kp N3        &kp KP_ENTER  &trans
                                             &trans            &trans             &trans     &trans    &trans  &trans           &kp N0         &kp DOT
            >;
        };

        raise_layer {
            display-name = "Raise";
            bindings = <
&trans     &trans    &trans             &trans           &trans           &trans                       &trans    &trans           &trans         &trans           &trans       &trans
&kp F1     &kp F2    &kp F3             &kp F4           &kp F5           &kp F6                       &kp F7    &kp F8           &kp F9         &kp F10          &kp F11      &kp F12
&kp GRAVE  &kp EXCL  &bhm LALT AT_SIGN  &bhm LCTRL HASH  &bhm LSHFT DLLR  &kp PRCNT                    &kp LEFT  &bhm RSHFT DOWN  &bhm RCTRL UP  &bhm RALT RIGHT  &kp RS(F11)  &kp RC(F12)
&kp CARET  &kp AMPS  &kp STAR           &kp LPAR         &kp RPAR         &kp MINUS  &trans    &trans  &kp HOME  &kp PG_DN        &kp PG_UP      &kp END          &trans       &kp RS(F12)
                                        &trans           &trans           &trans     &trans    &trans  &trans    &trans           &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        system_layer {
            bindings = <
&bt BT_CLR        &bt BT_SEL 0       &bt BT_SEL 1       &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                    &trans  &trans  &trans  &trans  &trans  &trans
&ext_power EP_ON  &ext_power EP_OFF  &ext_power EP_TOG  &trans        &trans        &trans                          &trans  &trans  &trans  &trans  &trans  &trans
&trans            &trans             &trans             &trans        &trans        &trans                          &trans  &trans  &trans  &trans  &trans  &trans
&trans            &trans             &trans             &trans        &trans        &trans        &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
                                                        &trans        &trans        &trans        &trans    &trans  &trans  &trans  &trans
            >;
        };
    };
};
